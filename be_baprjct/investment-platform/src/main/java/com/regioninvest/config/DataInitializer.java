package com.regioninvest.config;

import com.regioninvest.entity.*;
import com.regioninvest.repository.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;

@Component
public class DataInitializer implements CommandLineRunner {

    @Autowired
    private SectorRepository sectorRepository;

    @Autowired
    private ProjectRepository projectRepository;

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private RoleRepository roleRepository;

    @Autowired
    private PasswordEncoder passwordEncoder;

    @Override
    public void run(String... args) throws Exception {
        System.out.println("üöÄ Initialisation des donn√©es pour le catalogue de projets...");
        initializeRoles();
        initializeSectors();
        initializeUsers();
        initializeSampleProjects();
        System.out.println("‚úÖ Initialisation termin√©e!");
    }

    private void initializeRoles() {
        List<String> roleNames = Arrays.asList("ADMIN", "GESTIONNAIRE", "PORTEUR", "INVESTISSEUR");

        for (String roleName : roleNames) {
            if (roleRepository.findByName(roleName).isEmpty()) {
                Role role = new Role(roleName);
                roleRepository.save(role);
                System.out.println("‚ûï R√¥le cr√©√©: " + roleName);
            }
        }
    }

    private void initializeSectors() {
        if (sectorRepository.count() == 0) {
            List<String> sectors = Arrays.asList(
                    "√ânergie renouvelable ‚Äì √ânergie solaire",
                    "√ânergie renouvelable ‚Äì √ânergie √©olienne",
                    "Agriculture",
                    "Tourisme",
                    "Technologie",
                    "Sant√©",
                    "√âducation",
                    "Artisanat",
                    "Industrie",
                    "Patrimoine"
            );

            for (String sectorName : sectors) {
                Sector sector = new Sector();
                sector.setName(sectorName);
                sector.setIsActive(true);
                sectorRepository.save(sector);
            }

            System.out.println("‚úÖ " + sectors.size() + " secteurs cr√©√©s");
        }
    }

    private void initializeUsers() {
        // Cr√©er seulement des porteurs si ils n'existent pas d√©j√†
        createUserIfNotExists("porteur1", "porteur1@example.com", "PORTEUR");
        createUserIfNotExists("porteur2", "porteur2@example.com", "PORTEUR");

        System.out.println("‚úÖ Utilisateurs porteurs v√©rifi√©s/cr√©√©s");
    }

    private void createUserIfNotExists(String username, String email, String roleName) {
        if (userRepository.findByUsername(username).isEmpty()) {
            try {
                Optional<Role> roleOpt = roleRepository.findByName(roleName);
                if (roleOpt.isPresent()) {
                    User user = new User();
                    user.setUsername(username);
                    user.setEmail(email);
                    user.setPasswordHash(passwordEncoder.encode("password123"));
                    user.setRole(roleOpt.get()); // ManyToOne relationship
                    user.setIsEnabled(true);

                    userRepository.save(user);
                    System.out.println("‚ûï Utilisateur cr√©√©: " + username);
                }
            } catch (Exception e) {
                System.out.println("‚ö†Ô∏è Erreur cr√©ation utilisateur " + username + ": " + e.getMessage());
            }
        }
    }

    private void initializeSampleProjects() {
        if (projectRepository.count() == 0) {
            Optional<User> porteur1 = userRepository.findByUsername("porteur1");
            Optional<User> porteur2 = userRepository.findByUsername("porteur2");

            if (porteur1.isPresent() && porteur2.isPresent()) {
                createSampleProjects(porteur1.get(), porteur2.get());
                System.out.println("‚úÖ 8 projets d'exemple cr√©√©s");
            } else {
                System.out.println("‚ö†Ô∏è Impossible de cr√©er les projets - porteurs manquants");
            }
        }
    }

    private void createSampleProjects(User porteur1, User porteur2) {
        // Projet 1: Atelier de tapis berb√®res
        createProject(
                "Atelier de production de tapis berb√®res traditionnels",
                "Cr√©ation d'un atelier de production et de formation aux techniques traditionnelles de tissage des tapis berb√®res. Ce projet vise √† pr√©server le patrimoine artisanal local tout en cr√©ant des opportunit√©s √©conomiques pour les artisans de la r√©gion.",
                "Artisanat", "Rissani", "Errachidia",
                new BigDecimal("1.4"), new BigDecimal("2.8"), 35, new BigDecimal("2.0"),
                "Pr√©server l'artisanat traditionnel berb√®re et cr√©er des emplois locaux",
                "Techniques traditionnelles de tissage, m√©tiers √† tisser artisanaux",
                "Pr√©servation du patrimoine culturel, d√©veloppement √©conomique local, formation des jeunes artisans",
                "‚Ä¢ Subvention du Fonds de l'Artisanat\n‚Ä¢ Exon√©ration fiscale pendant 5 ans\n‚Ä¢ Facilit√©s d'acc√®s au cr√©dit artisanal",
                "Coop√©ratives d'artisans locaux, Minist√®re de l'Artisanat, Centre de formation professionnelle",
                ProjectCategory.TRADITIONAL_CRAFTS, porteur1, 156
        );

        // Projet 2: Centrale solaire
        createProject(
                "Centrale solaire photovolta√Øque",
                "Extension de la capacit√© solaire dans la r√©gion d'Ouarzazate, profitant de l'ensoleillement exceptionnel de plus de 3000 heures par an. Installation de panneaux photovolta√Øques de derni√®re g√©n√©ration avec syst√®me de stockage.",
                "√ânergie renouvelable ‚Äì √ânergie solaire", "Ouarzazate", "Ouarzazate",
                new BigDecimal("12.5"), new BigDecimal("28.7"), 45, new BigDecimal("2.3"),
                "Augmenter la capacit√© de production d'√©nergie solaire dans la r√©gion",
                "Panneaux photovolta√Øques haute efficacit√©, syst√®me de stockage par batteries",
                "R√©duction des √©missions de CO2, cr√©ation d'emplois verts, ind√©pendance √©nerg√©tique",
                "‚Ä¢ Subvention du Fonds de D√©veloppement √ânerg√©tique jusqu'√† 20%\n‚Ä¢ Exon√©ration de TVA sur √©quipements\n‚Ä¢ Tarifs pr√©f√©rentiels raccordement r√©seau",
                "ONEE, MASEN, Entreprises locales du secteur √©nerg√©tique",
                ProjectCategory.RENEWABLE_ENERGY, porteur2, 245
        );

        // Projet 3: Centre de formation tourisme
        createProject(
                "Centre de formation aux m√©tiers du tourisme",
                "Cr√©ation d'un centre de formation professionnelle sp√©cialis√© dans les m√©tiers du tourisme pour r√©pondre aux besoins croissants du secteur touristique dans la r√©gion Dr√¢a-Tafilalet.",
                "√âducation", "Midelt", "Midelt",
                new BigDecimal("5.5"), new BigDecimal("8.2"), 30, new BigDecimal("1.5"),
                "Former les jeunes aux m√©tiers du tourisme et am√©liorer la qualit√© des services touristiques",
                "√âquipements p√©dagogiques modernes, simulateurs, laboratoires pratiques",
                "Am√©lioration des comp√©tences locales, d√©veloppement du tourisme r√©gional",
                "‚Ä¢ Financement OFPPT\n‚Ä¢ Partenariat avec √©tablissements h√¥teliers\n‚Ä¢ Bourses de formation disponibles",
                "OFPPT, Conseil r√©gional, H√¥tels et restaurants partenaires",
                ProjectCategory.EDUCATION, porteur1, 123
        );

        // Projet 4: Complexe √©cotouristique
        createProject(
                "Complexe √©cotouristique dans les oasis",
                "D√©veloppement d'un complexe touristique √©cologique int√©gr√© dans les palmeraies, respectueux de l'environnement et valorisant le patrimoine naturel des oasis.",
                "Tourisme", "Zagora", "Zagora",
                new BigDecimal("8.3"), new BigDecimal("15.6"), 75, new BigDecimal("1.9"),
                "D√©velopper un tourisme durable et respectueux de l'environnement",
                "Architecture bioclimatique, √©nergies renouvelables, gestion durable de l'eau",
                "D√©veloppement du tourisme durable, pr√©servation des oasis, cr√©ation d'emplois locaux",
                "‚Ä¢ Subvention du Fonds de D√©veloppement Touristique\n‚Ä¢ Label √©cotourisme\n‚Ä¢ Facilit√©s fonci√®res zones touristiques",
                "Minist√®re du Tourisme, Conseil r√©gional, Associations locales",
                ProjectCategory.TOURISM, porteur2, 198
        );

        // Projet 5: Unit√© de conditionnement des dattes
        createProject(
                "Unit√© de conditionnement des dattes",
                "Cr√©ation d'une unit√© moderne de conditionnement et de transformation des dattes pour valoriser la production locale et am√©liorer la cha√Æne de valeur.",
                "Agriculture", "Errachidia", "Errachidia",
                new BigDecimal("4.8"), new BigDecimal("9.2"), 60, new BigDecimal("1.9"),
                "Valoriser la production locale de dattes et cr√©er de la valeur ajout√©e",
                "√âquipements de tri automatique, machines de conditionnement, chambre froide",
                "Valorisation de la production agricole, cr√©ation d'emplois, d√©veloppement des exportations",
                "‚Ä¢ Subvention ANDA\n‚Ä¢ Exon√©ration fiscale investissement agricole\n‚Ä¢ Facilit√©s d'exportation",
                "ANDA, Coop√©ratives de producteurs, Exportateurs, Chambre d'agriculture",
                ProjectCategory.AGRICULTURE, porteur1, 87
        );

        // Projet 6: Clinique m√©dicale mobile
        createProject(
                "Clinique m√©dicale mobile pour zones rurales",
                "Mise en place d'un service de clinique mobile pour desservir les zones rurales isol√©es et am√©liorer l'acc√®s aux soins de sant√© primaires dans les r√©gions recul√©es.",
                "Sant√©", "Erfoud", "Errachidia",
                new BigDecimal("2.7"), new BigDecimal("4.1"), 18, new BigDecimal("1.5"),
                "Am√©liorer l'acc√®s aux soins dans les zones rurales isol√©es",
                "V√©hicules m√©dicalis√©s √©quip√©s, √©quipements de diagnostic portable, t√©l√©m√©decine",
                "Am√©lioration de la sant√© publique, r√©duction des in√©galit√©s d'acc√®s aux soins",
                "‚Ä¢ Subvention du Minist√®re de la Sant√©\n‚Ä¢ Partenariat avec RAMED\n‚Ä¢ Exon√©ration fiscale secteur sant√©",
                "Minist√®re de la Sant√©, D√©l√©gation provinciale, ONG m√©dicales",
                ProjectCategory.HEALTH, porteur2, 156
        );

        // Projet 7: R√©habilitation des kasbahs
        createProject(
                "R√©habilitation des kasbahs historiques",
                "Projet de restauration et de valorisation touristique des kasbahs historiques pour pr√©server le patrimoine architectural et d√©velopper le tourisme culturel.",
                "Patrimoine", "Kelaat M'Gouna", "Ouarzazate",
                new BigDecimal("6.9"), new BigDecimal("10.4"), 40, new BigDecimal("1.5"),
                "Pr√©server le patrimoine architectural et d√©velopper le tourisme culturel",
                "Techniques de restauration traditionnelles, mat√©riaux locaux, technologies de conservation",
                "Pr√©servation du patrimoine, d√©veloppement du tourisme culturel, valorisation de l'identit√© locale",
                "‚Ä¢ Subvention du Minist√®re de la Culture\n‚Ä¢ Classement patrimoine mondial UNESCO\n‚Ä¢ Partenariats internationaux",
                "Minist√®re de la Culture, UNESCO, Experts en restauration, Associations patrimoine",
                ProjectCategory.HERITAGE, porteur1, 134
        );

        // Projet 8: Syst√®me d'irrigation
        createProject(
                "Syst√®me d'irrigation goutte-√†-goutte",
                "Mise en place d'un syst√®me d'irrigation moderne et √©conome en eau pour les palmeraies, utilisant la technologie goutte-√†-goutte pour optimiser l'utilisation des ressources hydriques.",
                "Agriculture", "Tinghir", "Tinghir",
                new BigDecimal("3.2"), new BigDecimal("5.8"), 25, new BigDecimal("1.8"),
                "Moderniser les syst√®mes d'irrigation et √©conomiser l'eau",
                "Syst√®me d'irrigation goutte-√†-goutte, capteurs d'humidit√©, gestion automatis√©e",
                "√âconomie d'eau, am√©lioration des rendements agricoles, durabilit√© environnementale",
                "‚Ä¢ Subvention Plan Maroc Vert\n‚Ä¢ Aide √† la modernisation agricole\n‚Ä¢ Facilit√©s de cr√©dit agricole",
                "Minist√®re de l'Agriculture, Office r√©gional de d√©veloppement agricole, Coop√©ratives agricoles",
                ProjectCategory.AGRICULTURE, porteur2, 98
        );
    }

    private void createProject(String title, String description, String sectorName,
                               String location, String province, BigDecimal budget,
                               BigDecimal revenue, Integer jobs, BigDecimal profitability,
                               String goal, String technology, String impact,
                               String incentives, String partners,
                               ProjectCategory category, User porteur, Integer views) {

        Optional<Sector> sectorOpt = sectorRepository.findByName(sectorName);
        if (sectorOpt.isPresent()) {
            Project project = new Project();
            project.setTitle(title);
            project.setDescription(description);
            project.setSector(sectorOpt.get());
            project.setLocation(location);
            project.setProvince(province);
            project.setBudget(budget);
            project.setRevenue(revenue);
            project.setJobs(jobs);
            project.setProfitability(profitability);
            project.setGoal(goal);
            project.setTechnology(technology);
            project.setImpact(impact);
            project.setIncentives(incentives);
            project.setPartners(partners);
            project.setCategory(category);
            project.setStatus(ProjectStatus.ACTIVE);
            project.setPorteur(porteur);
            project.setViews(views);

            projectRepository.save(project);
        }
    }
}